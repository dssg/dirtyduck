config_version: 'v6'

model_comment: 'inspections_dt'

user_metadata:
  label_definition: 'failed'
  experiment_type: 'inspections prioritization'
  description: |
    Decision Tree Classifier
  purpose: 'test'
  org: 'DSaPP'
  team: 'Tutorial'
  author: 'Your name here'

temporal_config:
    feature_start_time: '2010-01-04'
    feature_end_time: '2018-03-01'
    label_start_time: '2015-02-01'
    label_end_time: '2018-03-01'

    model_update_frequency: '1y'
    training_label_timespans: ['1month']
    training_as_of_date_frequencies: '1month'

    test_durations: '1month'
    test_label_timespans: ['1month']
    test_as_of_date_frequencies: '1month'

    max_training_histories: '5y'

label_config:
  query: |
    select
    entity_id,
    bool_or(result = 'fail')::integer as outcome
    from semantic.events
    where '{as_of_date}'::timestamp <= date
    and date < '{as_of_date}'::timestamp + interval '{label_timespan}'
    group by entity_id
  #include_missing_labels_in_train_as: False
  name: 'failed_inspection'

cohort_config:
  query: |
    select entity_id
    from semantic.entities
    where
    tsrange(start_time, end_time, '[]') @> '{as_of_date}'::date
  name: 'active_facilities'

feature_aggregations:
    -
        prefix: 'inspections'
        from_obj: 'semantic.events'
        knowledge_date_column: 'date'

        categoricals_imputation:
            all:
                type: 'zero'

        categoricals:
            -
                column: 'type'
                choice_query: 'select distinct type from semantic.events where type is not null'
                metrics:
                    - 'sum'

        intervals:
            - '3month'

        groups:
            - 'entity_id'
            - 'zip_code'

grid_config:
    'sklearn.tree.DecisionTreeClassifier':
        max_depth: [1,null]
        max_features: [1, sqrt, null]

feature_group_definition:
   prefix: ['inspections']

feature_group_strategies: ['all']

scoring:
    sort_seed: 5
    testing_metric_groups:
        -
          metrics: [precision@, recall@]
          thresholds:
            percentiles: [5.0, 10.0]
            top_n: [5, 10, 25]

    training_metric_groups:
      -
        metrics: [accuracy]
      -
        metrics: [precision@, recall@]
        thresholds:
          percentiles: [5.0, 10.0]
          top_n: [5, 10, 25]
