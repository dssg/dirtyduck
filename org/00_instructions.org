#+STARTUP: showeverything
#+STARTUP: nohideblocks
#+STARTUP: indent
#+STARTUP: align
#+STARTUP: inlineimages
#+STARTUP: latexpreview
#+PROPERTY: header-args:sql :engine postgresql
#+PROPERTY: header-args:sql+ :dbhost 0.0.0.0
#+PROPERTY: header-args:sql+ :dbport 5434
#+PROPERTY: header-args:sql+ :dbuser food_user
#+PROPERTY: header-args:sql+ :dbpassword some_password
#+PROPERTY: header-args:sql+ :database food
#+PROPERTY: header-args:sql+ :results table drawer
#+PROPERTY: header-args:sql+ :cmdline -q
#+PROPERTY: header-args:sh  :results verbatim org
#+PROPERTY: header-args:sh+ :prologue exec 2>&1 :epilogue :
#+PROPERTY: header-args:ipython   :session Food_inspections
#+PROPERTY: header-args:ipython+ :results raw drawer
#+OPTIONS: broken-links:mark
#+OPTIONS: tasks:todo
#+OPTIONS: LaTeX:t


* Welcome!

This tutorial will show you how to use =triage=, a data science
 modeling tool developed at the [[http://dsapp.uchicago.edu][Center for Data Science and Public
 Policy]] (DSaPP) at the University of Chicago.

=triage= helps build models for three [[https://dssg.uchicago.edu/data-science-for-social-good-conference-2017/training-workshop-data-science-for-social-good-problem-templates/][common applied problems]]: (a) Early
warning systems (*EWS* or *EIS*), (b) /resource prioritization/ (a.k.a "an
inspections problem") and (c) interaction level predictions (a.k.a
"appointment level"). These problems
are difficult to model because their conceptualization and
and implementation are prone to error, thanks to their multi-dimensional,
multi-entity, time-series structure.

The last version of this tutorial is published in [[https://dssg.github.io/dirtyduck/]]

*NOTE* This tutorial is in sync with the latest version of =triage=. At
this moment [[https://github.com/dssg/triage/releases/tag/v3.3.0][v3.3.0 (Arepa)]].

* Before you start
** What you need for this tutorial

Install [[http://www.docker.com][Docker CE]] and [[https://docs.docker.com/compose/][Docker Compose]]. That's it.
Follow the links for installation instructions.

Note that if you are using =GNU/Linux= you should add your user to the
=docker= group following the instructions at this [[https://docs.docker.com/install/linux/linux-postinstall/][link]].

At the moment only operative systems with *nix-type command lines are
supported, such as =GNU/Linux= and =MacOS=. Recent versions of
=Windows= may also work.

** How to use this tutorial

First, clone this repository on your laptop

#+BEGIN_EXAMPLE
 git clone https://github.com/dssg/dirtyduck.git
#+END_EXAMPLE

Second, run

#+BEGIN_EXAMPLE
./tutorial.sh start
#+END_Example

This will take several minutes the first time you do it.


** How you can help to improve this tutorial

If you want to contribute, please follow the suggestions in the [[file:~/projects/dsapp/dirtyduck/README.org::*How%20you%20can%20help][README]]
